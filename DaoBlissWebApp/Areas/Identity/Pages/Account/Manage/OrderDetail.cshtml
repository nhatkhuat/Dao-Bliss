@page "/user/orderDetail/{orderId}"
@model DaoBlissWebApp.Areas.Identity.Pages.Account.Manage.OrderDetailModel
@using DaoBlissWebApp.Common.Entities
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = "Orders";
}
<div class="w-full px-4 sm:px-6 py-6 sm:py-8">
    <div class="max-w-7xl mx-auto">
        <div class="flex flex-col sm:flex-row gap-4 sm:gap-8">
            <partial name="_ManageNav" />
            <div class="flex-1">
                <div id="order-detail-section" class="profile-content bg-white rounded-lg shadow-sm border p-8">
                    @{
                        var order = Model.Order;
                    }

                    <div class="grid grid-cols-2 gap-8">
                        <div>
                            <h3 class="font-semibold text-gray-900 mb-4">Thông tin đơn hàng</h3>
                            <div class="space-y-3 text-sm">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Mã đơn hàng:</span>
                                    <span class="font-medium order-code">@order?.OrderNumber</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Ngày đặt hàng:</span>
                                    <span class="order-date">@order?.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                                </div>
                                <div class="flex justify-between">
                                    @{
                                        var statusMap = new Dictionary<string, (string Text, string Css)>
                                                                                                                                                                                                                                        {
                        { "Pending", ("Chờ xử lý", "bg-yellow-100 text-yellow-800") },
                        { "Processing", ("Đang đóng hàng", "bg-blue-100 text-blue-800") },
                        { "Shipped", ("Đã giao hàng", "bg-green-100 text-green-800") },
                        { "Completed", ("Hoàn tất", "bg-teal-100 text-teal-800") },
                        { "Cancelled", ("Đã hủy", "bg-red-100 text-red-800") },
                        { "Returned", ("Hoàn hàng", "bg-orange-100 text-orange-800") }
                        };

                                        var status = order.Status;
                                        var (statusText, statusClass) = statusMap.ContainsKey(status)
                                            ? statusMap[status]
                                            : ("Không xác định", "bg-gray-100 text-gray-800");
                                    }
                                    <span class="text-gray-600">Trạng thái:</span>
                                    <span class="px-2 py-1 text-xs rounded-full @statusClass">
                                        @statusText
                                    </span>

                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Hình thức thanh toán:</span>
                                    <span class="payment-method">@order.PaymentMethod</span>
                                </div>
                                @if (status.Equals("Pending"))
                                {
                                    <a href="javascript:void(0)"
                                       class="order-cancel-link inline-block px-4 py-2 text-sm font-medium text-red-600 border border-red-600 rounded-lg hover:bg-red-50 transition-colors"
                                       data-order-id="@Model.Order.OrderNumber">
                                        Hủy đơn hàng
                                    </a>
                                }
                            </div>
                        </div>

                        <div>
                            <h3 class="font-semibold text-gray-900 mb-4">Thông tin giao hàng</h3>
                            <div class="space-y-3 text-sm">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Người nhận:</span>
                                    <span class="recipient-name">@order.ShippingFullName</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Số điện thoại:</span>
                                    <span class="recipient-phone">@order.ShippingPhoneNumber</span>
                                </div>
                                <div>
                                    <div class="text-gray-600 mb-1">Địa chỉ giao hàng:</div>
                                    <div class="recipient-address">@order.ShippingAddress, @order.ShippingWard, @order.ShippingDistrict, @order.ShippingCity</div>
                                </div>
                            </div>
                        </div>
                        
                    </div>

                    <div class="mt-8">
                        <h3 class="font-semibold text-gray-900 mb-4">Sản phẩm đã đặt</h3>
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead>
                                    <tr class="border-b border-gray-200">
                                        <th class="text-left py-3 text-sm font-medium text-gray-700">Sản phẩm</th>
                                        <th class="text-center py-3 text-sm font-medium text-gray-700">Số lượng</th>
                                        <th class="text-right py-3 text-sm font-medium text-gray-700">Đơn giá</th>
                                        <th class="text-right py-3 text-sm font-medium text-gray-700">Thành tiền</th>
                                    </tr>
                                </thead>
                                <tbody class="order-products">
                                    @foreach (OrderItem item in order.Items)
                                    {
                                        if (item != null)
                                        {
                                            <tr class="border-b border-gray-100">
                                                <td class="py-4">
                                                    <div class="flex items-center space-x-3">
                                                        <div class="w-12 h-12 bg-gray-200 rounded flex items-center justify-center overflow-hidden">
                                                            <img src="@item.ProductVariant?.Product?.Images.FirstOrDefault()?.ImageUrl" class="w-full h-full object-cover" />
                                                        </div>
                                                        <div>
                                                            <div class="font-medium text-gray-900">@item.Name</div>
                                                            <div class="text-sm text-gray-600">@item.ProductVariant?.Size?.Name@item.ProductVariant?.Size?.Unit</div>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="text-center py-4">@item.Quantity</td>
                                                <td class="text-right py-4">@item.Price.ToString("N0") VNĐ</td>
                                                <td class="text-right py-4 font-medium">@item.Total.ToString("N0") VNĐ</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="mt-6 border-t border-gray-200 pt-6">
                        <div class="flex justify-end">
                            <div class="w-80 space-y-3">
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">Tạm tính:</span>
                                    <span class="subtotal">@order.SubTotal.ToString("N0") VNĐ</span>
                                </div>
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">Phí giao hàng:</span>
                                    <span class="shipping-fee">@order.ShippingFee.ToString("N0") VNĐ</span>
                                </div>
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">Giảm giá:</span>
                                    <span class="text-red-600 discount">-@order.Discount.ToString("N0") VNĐ</span>
                                </div>
                                <div class="border-t border-gray-200 pt-3">
                                    <div class="flex justify-between font-semibold text-lg">
                                        <span>Tổng cộng:</span>
                                        <span class="text-primary total-amount">@order.Total.ToString("N0") VNĐ</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cancelBtn = document.querySelector(".order-cancel-link");
        cancelBtn.addEventListener("click", async function () {
            const orderId = this.getAttribute("data-order-id");
            if (!confirm("Bạn có chắc muốn hủy đơn hàng này không?")) return;

            const response = await fetch(`?handler=CancelOrder&orderId=${orderId}`, {
                method: "POST",
                headers: {
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            });

            const result = await response.json();
            if (result.success) {
                alert(result.message);
                location.reload();
            } else {
                alert(result.error || "Có lỗi xảy ra");
            }
        });
    });
</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}