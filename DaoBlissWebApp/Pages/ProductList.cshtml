@page
@model DaoBlissWebApp.Pages.ProductListModel
@using DaoBlissWebApp.Common.Entities
@using System.Text.Json
@{
    ViewData["Title"] = "Mua sắm";
}

<main class="min-h-screen">
    <section class="relative h-96 bg-cover bg-center"
             style="background-image: url('https://res.cloudinary.com/dsvasaqr8/image/upload/v1757146219/78e9ef0ed229379d04640a3bc62a3d51_rnmfnu.jpg');">
        <div class="absolute inset-0 bg-black/50"></div>
        <div class="relative z-10 flex items-center justify-center h-full text-center text-white">
            <div>
                <h1 class="text-5xl font-bold mb-4 shadow-md" style="text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);">Mua sắm</h1>
                <p class="text-xl font-semibold shadow-md" style="text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);">Hãy lựa chọn sự thoải mái cho bạn và người thân</p>
            </div>
        </div>
    </section>

    <div class="px-4 py-8 bg-yellow-50">
        <div class="max-w-7xl mx-auto">
            <div class="flex flex-col lg:flex-row gap-8">

                <div class="flex-1">
                    <div class="flex items-center justify-between mb-6">
                        <div class="text-sm text-gray-600">
                            Hiển thị <span id="product-count">@Model.Products.Count</span> sản phẩm
                        </div>
                        <div class="flex items-center gap-2">
                            <span class="text-sm text-gray-600">Sắp xếp:</span>
                            <div class="relative">
                                <select id="sort-filter" class="px-3 py-2 border border-gray-300 rounded-button text-sm bg-white pr-8">
                                    <option value="default">Mặc định</option>
                                    <option value="price-asc">Giá tăng dần</option>
                                    <option value="price-desc">Giá giảm dần</option>
                                    <option value="name">Tên A-Z</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div id="product-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        @foreach (Product pro in Model.Products)
                        {
                            string imgUrl = pro.Images.FirstOrDefault()?.ImageUrl ?? "";
                            string price = pro.Variants.FirstOrDefault()?.Price.ToString("c0", new System.Globalization.CultureInfo("vi-VN")) ?? "150.000 ₫";

                            string desc = "";
                            if (!string.IsNullOrEmpty(pro.Description) && pro.Description.TrimStart().StartsWith("{"))
                            {
                                try
                                {
                                    var parsed = JsonSerializer.Deserialize<ProductDescription>(pro.Description);
                                    desc = parsed?.Mota ?? "";
                                }
                                catch
                                {
                                    desc = pro.Description;
                                }
                            }
                            else
                            {
                                desc = pro.Description;
                            }
                            <div class="product-card bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow duration-300" data-price="@price" data-name="@pro.Name">
                                <div class="aspect-square overflow-hidden">
                                    <img src="@imgUrl" alt="@pro.Name" class="w-full h-full object-cover object-top hover:scale-105 transition-transform duration-300">
                                </div>
                                <div class="p-4">
                                    <h3 class="font-semibold text-primary mb-2"> @pro.Name</h3>
                                    <p class="text-sm text-gray-600 mb-3"> @desc</p>
                                    <div class="flex items-center justify-between">
                                        <span class="text-lg font-bold text-primary">@price</span>
                                        <div class="flex gap-2">
                                            <a class="button px-4 py-2 border border-primary text-primary text-sm rounded-button
   hover:bg-green-700 hover:!text-white whitespace-nowrap !rounded-button transition-colors"
                                               asp-page="ProductDetail" asp-route-slug="@pro.Slug">
                                                Xem thêm
                                            </a>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div id="pagination" class="flex justify-center mt-12 gap-2"></div>
                </div>
            </div>
        </div>
    </div>
</main>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const sortFilter = document.getElementById('sort-filter');
        const productGrid = document.getElementById('product-grid');
        const productCount = document.getElementById('product-count');
        const paginationWrapper = document.getElementById('pagination');
        let products = Array.from(document.querySelectorAll('.product-card'));
        let currentPage = 1;
        const pageSize = 6;

        function renderProducts() {
            // Ẩn tất cả sản phẩm
            products.forEach(p => p.style.display = 'none');

            // Tính toán sản phẩm hiển thị
            const start = (currentPage - 1) * pageSize;
            const end = start + pageSize;
            const visibleProducts = products.slice(start, end);

            // Hiển thị sản phẩm cho trang hiện tại
            visibleProducts.forEach(p => p.style.display = 'block');
            productCount.textContent = products.length;

            renderPagination();
        }

        function renderPagination() {
            paginationWrapper.innerHTML = '';
            const totalPages = Math.ceil(products.length / pageSize);

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = `w-8 h-8 flex items-center justify-center border rounded text-sm ${i === currentPage ? 'bg-green-700 text-white border-green-700' : 'border-gray-300 hover:border-green-700 text-gray-700'
                    }`;
                btn.addEventListener('click', () => {
                    currentPage = i;
                    renderProducts();
                });
                paginationWrapper.appendChild(btn);
            }
        }

        function sortProducts() {
            const sortValue = sortFilter.value;
            products.sort((a, b) => {
                const priceA = parseFloat(a.dataset.price);
                const priceB = parseFloat(b.dataset.price);
                const nameA = a.dataset.name;
                const nameB = b.dataset.name;

                switch (sortValue) {
                    case 'price-asc':
                        return priceA - priceB;
                    case 'price-desc':
                        return priceB - priceA;
                    case 'name':
                        return nameA.localeCompare(nameB, 'vi');
                    default:
                        // Sắp xếp mặc định theo thứ tự ban đầu (ID giảm dần)
                        return parseInt(b.dataset.id || a.dataset.id) - parseInt(a.dataset.id || b.dataset.id);
                }
            });

            // Cập nhật lại DOM
            products.forEach(card => productGrid.appendChild(card));
            currentPage = 1;
            renderProducts();
        }

        sortFilter.addEventListener('change', sortProducts);

        // Khởi chạy lần đầu
        renderProducts();
    });
</script>

